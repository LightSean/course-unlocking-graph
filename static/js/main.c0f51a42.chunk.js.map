{"version":3,"sources":["data/pics/seanTheMan2.png","data/pics/seanTheMan.png","components/MyAppBar.js","components/Header.js","utils/Resources.js","components/KdamForm.js","utils/TreeBuilder.js","components/CourseTree.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","icon","marginRight","spacing","MyAppBar","props","classes","AppBar","color","position","Toolbar","className","Switch","checked","dark_mode","onChange","toggleTheme","Typography","variant","noWrap","container","backgroundColor","palette","background","paper","padding","large","avatar_container","marginBottom","Header","useTheme","useEffect","document","body","style","overflow","Container","maxWidth","Hidden","smDown","Grid","justify","item","alt","src","type","require","component","align","gutterBottom","paragraph","Link","underline","href","kdam_url","ug_course_url","default","headlines","paddingTop","formControl","minWidth","button","empty_course_obj","courseName","courseNumber","starter_course_obj","KdamForm","useState","localStorage","getItem","faculty","setFaculty","all_courses","setAllCourses","course_list","setCourseList","JSON","parse","courseObj","setCourseObj","faculty_required","setFacultyRequired","course_required","setCourseRequired","loading","setLoading","history","useHistory","fetchWithLoading","arg","a","fetch","res","json","formatted","onEffect","changedTypeOfCoursesFunction","e","target","value","setItem","exists","Paper","elevation","alignItems","direction","FormControl","disabled","error","required","InputLabel","Select","MenuItem","Autocomplete","fullWidth","autoHighlight","options","getOptionLabel","option","val_obj","stringify","getOptionSelected","renderInput","params","TextField","label","margin","Button","onClick","ok","alert","push","process","is_fire_fox","InstallTrigger","reverseFireFox","name","split","reverse","join","buildTree","data","first","children_array","children","map","course","number","_collapsed","nodeSvgShape","shape","strokeWidth","shapeProps","cx","cy","r","tree","marginTop","tree_container","minHeight","but","maxHeight","main_container","control_panel","zoom","low_button","CourseTree","is_cell","check","navigator","userAgent","vendor","window","opera","test","substr","mobileAndTabletCheck","is_fullscreen_enabled","screenfull","isEnabled","x","y","dimensions","setDimensions","tree_data","setTreeData","current_course","setCurrentCourse","current_course_url","setCurrentCourseUrl","setZoom","empty_tree","setEmptyTree","tree_container_ref","useRef","main_container_ref","toggleFullScreen","current","toggle","console","log","centerTree","getBoundingClientRect","width","fetchTree","num","is_all_courses","parsed","queryString","location","search","allcourses","length","url","addEventListener","onFirstRender","light_styles","links","stroke","strokeOpacity","leafNode","attributes","fill","nodes","node","circle","LoadingComponent","xs","display","flexDirection","justifyContent","justifyItems","CircularProgress","EmptyTreeComponent","ref","md","wrap","Tooltip","arrow","title","IconButton","fontSize","open","justifySelf","onTouchStart","scrollX","scrollY","onscroll","scrollTo","onTouchEnd","initialDepth","styles","translate","orientation","transitionDuration","separation","siblings","nonSiblings","textLayout","textAnchor","transform","undefined","collapsible","nodeData","evt","footer","divider","Footer","Divider","App","setDarkMode","dark_theme","createMuiTheme","primary","main","secondary","light","dark","light_theme","ThemeProvider","CssBaseline","toString","atEnter","opacity","atLeave","atActive","path","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c0f51a42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/seanTheMan2.a1212ef9.png\";","module.exports = __webpack_public_path__ + \"static/media/seanTheMan.6cc3e2d5.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport {Toolbar} from \"@material-ui/core\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nexport function MyAppBar(props) {\r\n    const classes = useStyles();\r\n    return(\r\n        <AppBar color={'primary'} position={'sticky'}>\r\n            <Toolbar>\r\n                <AccountTreeIcon className={classes.icon}/>\r\n                <Switch\r\n                    checked={props.dark_mode}\r\n                    onChange={props.toggleTheme}\r\n                    color=\"secondary\"\r\n                />\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                    Toggle dark / light mode\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport {Container, Link} from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(4, 0, 3),\r\n    },\r\n    large: {\r\n\r\n    },\r\n    avatar_container: {\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n}));\r\n\r\n\r\n\r\nexport function Header(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    useEffect( () => {\r\n        document.body.style.overflow = null;\r\n    }, []);\r\n\r\n    return(\r\n        <div className={classes.container}>\r\n            <Container maxWidth={'md'}>\r\n                <Hidden smDown>\r\n                    <Grid container justify=\"center\" className={classes.avatar_container}>\r\n                        <Grid item>\r\n                            <img alt={'tree_graph_pic'} src={theme.palette.type === 'dark' ? (require(`../data/pics/seanTheMan2.png`)) : (require(`../data/pics/seanTheMan.png`))} className={classes.large}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Hidden>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Kdam Tree Graph\r\n                </Typography>\r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                    A little experiment using {<Link underline={'always'} color={'textSecondary'} href={'https://reactjs.org/'}>React.js</Link>} with\r\n                    the {<Link underline={'always'} color={'textSecondary'} href={'https://material-ui.com/'}>Mateial-UI</Link>} framework.<br/> This\r\n                    application answers the question \"After i will finish my course, what courses can i take?\"\r\n                </Typography>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","export const kdam_url = 'https://kadmsapi.herokuapp.com';\r\nexport const ug_course_url = 'https://ug3.technion.ac.il/rishum/course';","import React, {useEffect, useState} from 'react';\r\nimport {Container} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {kdam_url} from \"../utils/Resources\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(4, 0, 3),\r\n    },\r\n    headlines: {\r\n        paddingTop: theme.spacing(1)\r\n    },\r\n    formControl: {\r\n        marginBottom: theme.spacing(1),\r\n        minWidth: 250,\r\n    },\r\n    button:{\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst starter_course_string = 'Please choose faculty';\r\nconst empty_course_obj = {courseName: '', courseNumber: '000000'}\r\nconst starter_course_obj = {courseName: starter_course_string, courseNumber: '000000'}\r\n\r\nexport function KdamForm(props) {\r\n    const classes = useStyles();\r\n    const [faculty, setFaculty] = useState(localStorage.getItem('faculty') ? localStorage.getItem('faculty') : '');\r\n    const [all_courses, setAllCourses] = useState(localStorage.getItem('courses_type') ? localStorage.getItem('courses_type') : false);\r\n    const [course_list, setCourseList] = useState([starter_course_obj, empty_course_obj])\r\n    const [courseObj, setCourseObj] = useState(localStorage.getItem('course') ? JSON.parse(localStorage.getItem('course')) : starter_course_obj);\r\n    const [faculty_required, setFacultyRequired] = useState(false);\r\n    const [course_required, setCourseRequired] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const fetchWithLoading = async (arg) => {\r\n        await setLoading(true);\r\n        let res = await fetch(arg);\r\n        let formatted = await res.json();\r\n        await setLoading(false);\r\n        return formatted;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const onEffect = async () => {\r\n            if(faculty !== ''){\r\n                let res = await fetchWithLoading(`${kdam_url}/all_courses_for_faculty?faculty=${faculty}&is_all_courses=${all_courses}`);\r\n                // formatted.push(empty_course_obj); may do it here and not in the backend later\r\n                setCourseList(res);\r\n            }\r\n        }\r\n        onEffect();\r\n    }, [faculty, all_courses]);\r\n\r\n    const searchClicked = () => {\r\n        let ok = true;\r\n        if(faculty === ''){\r\n            setFacultyRequired(true);\r\n            ok = false;\r\n        }\r\n        if(courseObj.courseNumber === '000000'){\r\n            setCourseRequired(true)\r\n            alert('Please choose course and then click search!');\r\n            ok = false;\r\n        }\r\n        if(!ok){\r\n            return;\r\n        }\r\n        history.push(`${process.env.PUBLIC_URL}/tree?num=${courseObj.courseNumber}&allcourses=${all_courses}`)\r\n    }\r\n\r\n    const changedFacultyOption = (e) => {\r\n        setFaculty(e.target.value);\r\n        setCourseObj(empty_course_obj);\r\n        localStorage.setItem('faculty', e.target.value);\r\n    }\r\n\r\n    const changedTypeOfCoursesFunction = async (e) => {\r\n        setAllCourses(e.target.value);\r\n        localStorage.setItem('courses_type', e.target.value);\r\n        let formatted = await fetchWithLoading(`${kdam_url}/course_exists?number=${courseObj.courseNumber}&is_all_courses=${!all_courses}`);\r\n        if(!formatted.exists){\r\n            setCourseObj(empty_course_obj);\r\n        }\r\n    }\r\n\r\n    const changedTypeOfCourses = (e) => {\r\n        changedTypeOfCoursesFunction(e);\r\n    }\r\n\r\n    return(\r\n        <div className={classes.container}>\r\n            <Container maxWidth={'sm'}>\r\n                <Paper elevation={3} >\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" className={classes.headlines} gutterBottom>\r\n                        Let's get started\r\n                    </Typography>\r\n                    <Grid container alignItems={'center'} direction={'column'}>\r\n                        <Grid item>\r\n                            <FormControl disabled={loading} error={faculty_required} required={faculty_required} className={classes.formControl}>\r\n                                <InputLabel>Faculty</InputLabel>\r\n                                <Select\r\n                                    value={faculty}\r\n                                    onChange={changedFacultyOption}\r\n                                >\r\n                                    <MenuItem value={'cs'}>מדעי המחשב</MenuItem>\r\n                                    <MenuItem value={'industrial'}>תעשייה וניהול</MenuItem>\r\n                                    <MenuItem value={'electric'}>הנדסת חשמל</MenuItem>\r\n                                    <MenuItem value={'math'}>מתמטיקה</MenuItem>\r\n                                    <MenuItem value={'physics'}>פיזיקה</MenuItem>\r\n                                    <MenuItem value={'civil'}>הנדסה אזרחית</MenuItem>\r\n                                    <MenuItem value={'chemical_eng'}>הנדסה כימית</MenuItem>\r\n                                    <MenuItem value={'aviro'}>אווירונאוטיקה וחלל</MenuItem>\r\n                                    <MenuItem value={'mechanical'}>הנדסת מכונות</MenuItem>\r\n                                    <MenuItem value={'chemistry'}>כימיה</MenuItem>\r\n                                    <MenuItem value={'materials'}>הנדסת חומרים</MenuItem>\r\n                                    <MenuItem value={'bio_and_food_eng'}>הנדסת ביוטכנולוגיה ומזון</MenuItem>\r\n                                    <MenuItem value={'bio_med'}>הנדסה ביו-רפואית</MenuItem>\r\n                                    <MenuItem value={'education'}>חינוך למדע וטכנולוגיה</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl disabled={loading} className={classes.formControl}>\r\n                                <InputLabel>Type of courses</InputLabel>\r\n                                <Select\r\n                                    value={all_courses}\r\n                                    onChange={changedTypeOfCourses}\r\n                                >\r\n                                    <MenuItem value={false}>Only active courses</MenuItem>\r\n                                    <MenuItem value={true}>All courses</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl error={course_required} required={course_required} className={classes.formControl}>\r\n                                <Autocomplete\r\n                                    disabled={loading}\r\n                                    value={courseObj}\r\n                                    fullWidth={true}\r\n                                    autoHighlight={true}\r\n                                    options={course_list}\r\n                                    getOptionLabel={(option) => option.courseName}\r\n                                    onChange={(e, val_obj) => {\r\n                                        if(val_obj){\r\n                                            localStorage.setItem('course', JSON.stringify(val_obj));\r\n                                            setCourseObj(val_obj);\r\n                                        }else{\r\n                                            if(faculty){\r\n                                                localStorage.setItem('course', JSON.stringify(empty_course_obj));\r\n                                                setCourseObj(empty_course_obj)\r\n                                            }else{\r\n                                                localStorage.setItem('course', JSON.stringify(starter_course_obj));\r\n                                                setCourseObj(starter_course_obj)\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    getOptionSelected={((option, value) => option.courseName === value.courseName)}\r\n                                    renderInput={(params) => <TextField {...params} label={'Course'} margin=\"normal\"/>}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item className={classes.button}>\r\n                            <Button onClick={searchClicked} variant=\"contained\" color=\"primary\">\r\n                                Search\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","const is_fire_fox = typeof InstallTrigger !== 'undefined';\r\n\r\nexport function reverseFireFox(name){\r\n    if(is_fire_fox){\r\n        return name;\r\n    }\r\n    return name.split(\"\").reverse().join(\"\");\r\n}\r\n\r\nexport const buildTree = (data, first) => {\r\n    let children_array = data.children ? data.children.map((course) => buildTree(course, false)) : []\r\n    return {\r\n        name: reverseFireFox(data.name),\r\n        number: data.number,\r\n        _collapsed: !first,\r\n        nodeSvgShape: {\r\n            shape: 'circle',\r\n            strokeWidth: 0,\r\n            shapeProps: {\r\n                cx: 0,\r\n                cy: 0,\r\n                r: 11,\r\n            },\r\n        },\r\n        children: children_array\r\n    }\r\n}\r\n\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Tree from 'react-d3-tree';\r\nimport {Button, Container, Typography} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {buildTree, reverseFireFox} from \"../utils/TreeBuilder\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport screenfull from \"screenfull\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport {kdam_url, ug_course_url} from \"../utils/Resources\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// wow\r\nconst mobileAndTabletCheck = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n    return check;\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(4, 0, 3),\r\n    },\r\n    tree:{\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    tree_container: {\r\n        minHeight: 500,\r\n    },\r\n    but: {\r\n        maxHeight: 40\r\n    },\r\n    main_container: {\r\n\r\n    },\r\n    control_panel: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    zoom: {\r\n        paddingTop: 7,\r\n    },\r\n    low_button: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport function CourseTree(props) {\r\n    const is_cell = mobileAndTabletCheck()\r\n    const is_fullscreen_enabled = screenfull.isEnabled;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const [dimensions, setDimensions] = useState({\r\n        x: 30,\r\n        y: 30\r\n    })\r\n    const [tree_data, setTreeData] = useState({})\r\n    const [current_course, setCurrentCourse] = useState('');\r\n    const [current_course_url, setCurrentCourseUrl] = useState('');\r\n    const [zoom, setZoom] = useState(0.8)\r\n    const [loading, setLoading] = useState(false);\r\n    const [empty_tree, setEmptyTree] = useState(false);\r\n    const tree_container_ref = useRef(null);\r\n    const main_container_ref = useRef(null);\r\n\r\n\r\n    const toggleFullScreen = async () => {\r\n        try{\r\n            if(main_container_ref && main_container_ref.current){\r\n                await screenfull.toggle(main_container_ref.current);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    const nodeClicked = (nodeData, evt) => {\r\n        const url = `${ug_course_url}/${nodeData.number}`;\r\n        setCurrentCourse(reverseFireFox(nodeData.name));\r\n        setCurrentCourseUrl(url);\r\n    }\r\n    const newSearchClicked = () => {\r\n        history.push(`${process.env.PUBLIC_URL}/`);\r\n    }\r\n    const gotoCourseClicked = () => {\r\n        window.open(current_course_url, \"_blank\")\r\n    }\r\n    const centerTree = async () => {\r\n        if(tree_container_ref.current){\r\n            const dimensions = tree_container_ref.current.getBoundingClientRect();\r\n            let width  = dimensions.width / 2;\r\n            // Trick so it will work even if the component width was not changed!\r\n            await setDimensions({\r\n                x: 30,\r\n                y: 30\r\n            })\r\n            setDimensions({\r\n                x: width,\r\n                y: 30\r\n            })\r\n        }\r\n    }\r\n    const zoomOut = () => {\r\n        if(zoom - 0.3 < 0.3){\r\n            setZoom(0);\r\n        }else{\r\n            setZoom(zoom - 0.3);\r\n        }\r\n    }\r\n    const zoomIn = () => {\r\n        if(zoom + 0.3 >= 1){\r\n            setZoom(1);\r\n        }else{\r\n            setZoom(zoom + 0.3);\r\n        }\r\n    }\r\n    function disableScroll() {\r\n        let x=window.scrollX;\r\n        let y=window.scrollY;\r\n        window.onscroll=function(){window.scrollTo(x, y);};\r\n    }\r\n    function enableScroll() {\r\n        window.onscroll=function(){};\r\n    }\r\n    const fetchTree = async (num, is_all_courses) => {\r\n        let res = await fetch(`${kdam_url}/calculate_tree?number=${num}&is_all_courses=${is_all_courses}`);\r\n        return await res.json();\r\n    }\r\n\r\n    useEffect( () => {\r\n        const onFirstRender = async () => {\r\n            setLoading(true);\r\n            centerTree();\r\n            let parsed = queryString.parse(window.location.search)\r\n            if(!parsed || !parsed.num){\r\n                alert('problem with getting course number. please choose course again');\r\n                history.push(`${process.env.PUBLIC_URL}/`);\r\n                return;\r\n            }\r\n            if(!parsed.allcourses){\r\n                alert('problem getting type of courses preferences. looking only at active courses by default');\r\n                parsed.allcourses = 'false'\r\n            }\r\n            let tree_data = await fetchTree(parsed.num, parsed.allcourses);\r\n            if(!tree_data){\r\n                alert('problem with connecting to server. please try again later');\r\n                history.push(`${process.env.PUBLIC_URL}/`);\r\n                return;\r\n            }\r\n            if(!tree_data.children || tree_data.children.length === 0){\r\n                const url = `${ug_course_url}/${tree_data.number}`;\r\n                setCurrentCourse(tree_data.name);\r\n                setCurrentCourseUrl(url);\r\n                setEmptyTree(true);\r\n            }\r\n            let res = buildTree(tree_data, true);\r\n            setTreeData(res);\r\n            window.addEventListener('resize', centerTree);\r\n            setLoading(false);\r\n        }\r\n\r\n        onFirstRender();\r\n    }, [history]);\r\n\r\n    const dark_styles = {\r\n        links: {\r\n            stroke: '#ff8080',\r\n            strokeWidth: 2,\r\n            strokeOpacity: 1 ,\r\n        },\r\n        leafNode: {\r\n            attributes: {\r\n                fill: 'black'\r\n            }\r\n        },\r\n        nodes: {\r\n            node:{\r\n                circle: {\r\n                    fill: '#ff8080',\r\n                    strokeWidth: 1.4,\r\n                    stroke: '#424242'\r\n                },\r\n                name: {\r\n                    fill: '#e0e0eb',\r\n                    strokeWidth: 0,\r\n                }\r\n            },\r\n            leafNode: {\r\n                name: {\r\n                    fill: '#e0e0eb',\r\n                    strokeWidth: 0,\r\n                },\r\n                circle: {\r\n                    fill: '#424242',\r\n                    strokeWidth: 1.4,\r\n                    stroke: '#ff8080'\r\n                },\r\n            }\r\n        },\r\n    }\r\n    const light_main = '#9489C5'\r\n    const light_styles = {\r\n        links: {\r\n            stroke: light_main,\r\n            strokeWidth: 2,\r\n            strokeOpacity: 1 ,\r\n        },\r\n        leafNode: {\r\n            attributes: {\r\n                fill: 'black'\r\n            }\r\n        },\r\n        nodes: {\r\n            node:{\r\n                circle: {\r\n                    fill: light_main,\r\n                    strokeWidth: 1.2,\r\n                    stroke: theme.palette.background.paper\r\n                },\r\n                name: {\r\n                    strokeWidth: 0.5,\r\n                }\r\n            },\r\n            leafNode: {\r\n                name: {\r\n                    strokeWidth: 0.5,\r\n                },\r\n                circle: {\r\n                    fill: theme.palette.background.paper,\r\n                    strokeWidth: 1.4,\r\n                    stroke: light_main\r\n                },\r\n            }\r\n        },\r\n    }\r\n\r\n    const LoadingComponent = () => (\r\n        <Grid item container  justify={'center'} xs={12} className={classes.tree_container}>\r\n            <Grid item xs={12} style={{marginTop: theme.spacing(1)}}>\r\n                <div style={{display: 'flex', flexDirection:'column', justifyContent: 'center', justifyItems: 'center'}}>\r\n                    <Typography style={{marginBottom: theme.spacing(1)}} variant=\"h5\" align=\"center\" color=\"textPrimary\" >\r\n                        Building tree...\r\n                    </Typography>\r\n                    <CircularProgress style={{margin:'auto'}} color={'primary'}/>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n\r\n    const EmptyTreeComponent = () => (\r\n        <Grid item container  justify={'center'} xs={12} className={classes.tree_container}>\r\n            <Grid item xs={12} style={{marginTop: theme.spacing(1)}}>\r\n                <div style={{display: 'flex', flexDirection:'column', justifyContent: 'center', justifyItems: 'center'}}>\r\n                    <Typography style={{marginBottom: theme.spacing(1)}} variant=\"h5\" align=\"center\" color=\"textPrimary\" >\r\n                        {current_course} is not kdam for anything. try a new search\r\n                    </Typography>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n\r\n    return(\r\n        <div ref={main_container_ref}>\r\n            <Container maxWidth={'sm'} className={classes.tree}>\r\n                <Paper elevation={3} className={classes.control_panel}>\r\n                    <Grid spacing={0} container>\r\n                        <Grid item xs={12} >\r\n                            <Typography  variant=\"h5\" align=\"center\" color=\"textPrimary\" >\r\n                                Control Pannel\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item container justify={'center'} xs={12} md={12} spacing={0} wrap={\"nowrap\"}>\r\n                            <Tooltip arrow title=\"zoom in\">\r\n                                <IconButton onClick={zoomIn}> <ZoomInIcon fontSize=\"large\"/></IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip arrow title=\"re-center tree\">\r\n                                <IconButton onClick={centerTree}> <CenterFocusStrongIcon fontSize=\"large\"/> </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip arrow title=\"zoom out\">\r\n                                <IconButton onClick={zoomOut}> <ZoomOutIcon fontSize=\"large\"/> </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        {is_cell && is_fullscreen_enabled && (\r\n                            <Grid style={{marginBottom : theme.spacing(1)}} item container justify={'center'} xs={12}>\r\n                                <Button onClick={toggleFullScreen} variant=\"outlined\" color=\"primary\">\r\n                                    fullScreen\r\n                                </Button>\r\n                            </Grid>\r\n                        )}\r\n                        <Grid item container justify={'center'} xs={12}>\r\n                            <Button onClick={gotoCourseClicked} variant=\"text\" color=\"primary\">\r\n                                {current_course === '' ? ('Clicking on node tree will give you a link') : (`עבור אל ${current_course}`)}\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid className={classes.low_button} item container justify={'center'} xs={12}>\r\n                            <Button style={{justifySelf:'center'}} onClick={newSearchClicked} variant=\"text\" color=\"primary\">\r\n                                new search\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n            <Container maxWidth={'xl'}>\r\n                <Paper elevation={3} onTouchStart={disableScroll} onTouchEnd={enableScroll} ref = {tree_container_ref}>\r\n                    <Grid container className={classes.main_container}>\r\n                        {loading ? <LoadingComponent/> :\r\n                            empty_tree ? <EmptyTreeComponent/> :\r\n                            <Grid item xs={12} className={classes.tree_container}>\r\n                                <Tree\r\n                                    initialDepth={1}\r\n                                    styles={theme.palette.type === 'dark'? dark_styles : light_styles}\r\n                                    translate={dimensions}\r\n                                    data={tree_data}\r\n                                    orientation={'vertical'}\r\n                                    transitionDuration={0}\r\n                                    separation={{siblings: 1.9, nonSiblings: 1.5}}\r\n                                    textLayout={{textAnchor: \"start\", x: 15, y: 0, transform: undefined }}\r\n                                    collapsible={true}\r\n                                    zoom={zoom}\r\n                                    onClick={nodeClicked}\r\n                                />\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Container, Divider} from \"@material-ui/core\";\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    divider: {\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nfunction Footer() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container className={classes.footer}>\r\n            <Divider className={classes.divider} />\r\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                <Link href=\"https://github.com/LightSean\" color={'textSecondary'}>\r\n                    Created by Sean Meir\r\n                </Link>\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                Up to date with winter 2020-2021\r\n            </Typography>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {MyAppBar} from \"./components/MyAppBar\";\nimport {ThemeProvider, createMuiTheme} from \"@material-ui/core/styles\"\nimport {Header} from \"./components/Header\";\nimport {KdamForm} from \"./components/KdamForm\";\nimport {CourseTree} from \"./components/CourseTree\";\nimport {\n    BrowserRouter as Router,\n    Route\n} from \"react-router-dom\";\nimport { AnimatedSwitch } from 'react-router-transition';\nimport Footer from \"./components/Footer\";\nfunction App() {\n    const [dark_mode, setDarkMode] = useState(localStorage.getItem('dark_mode') ? localStorage.getItem('dark_mode')  === 'true' : false);\n    const dark_theme = createMuiTheme({\n        palette: {\n            type: \"dark\",\n            primary: {\n                main: '#bf4040'\n            },\n            secondary: {\n                main: '#ff8080',\n                light: '#ff8080',\n                dark: '#ff8080'\n            }\n        },\n    });\n    const light_theme = createMuiTheme({\n        palette: {\n            secondary: {\n                main: '#ff8080',\n                light: '#ff8080',\n                dark: '#ff8080'\n            },\n            primary: {\n                main: '#554B8E'\n\n            }\n        }\n    });\n    const toggleTheme = () => {\n        localStorage.setItem('dark_mode', (!dark_mode).toString());\n        setDarkMode(!dark_mode)\n    }\n\n    return (\n        <Router>\n            <ThemeProvider theme={dark_mode? dark_theme : light_theme}>\n                    <CssBaseline />\n                    <MyAppBar dark_mode={dark_mode} toggleTheme={toggleTheme}/>\n                    <AnimatedSwitch\n                        atEnter={{ opacity: 0 }}\n                        atLeave={{ opacity: 0 }}\n                        atActive={{ opacity: 1 }}\n                    >\n                        <Route path={`${process.env.PUBLIC_URL}/tree`}>\n                            <CourseTree/>\n                        </Route>\n                        <Route path={`${process.env.PUBLIC_URL}/`}>\n                            <Header/>\n                            <KdamForm/>\n                        </Route>\n                    </AnimatedSwitch>\n                    <Footer/>\n            </ThemeProvider>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}