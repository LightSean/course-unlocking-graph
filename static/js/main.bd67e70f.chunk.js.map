{"version":3,"sources":["data/pics/seanTheMan2.png","data/pics/seanTheMan.png","components/MyAppBar.js","components/Header.js","utils/TreeBuilder.js","components/KdamForm.js","components/CourseTree.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","icon","marginRight","spacing","MyAppBar","props","classes","AppBar","color","position","Toolbar","className","Switch","checked","dark_mode","onChange","toggleTheme","Typography","variant","noWrap","container","backgroundColor","palette","background","paper","padding","large","avatar_container","marginBottom","Header","useTheme","useEffect","document","body","style","overflow","Container","maxWidth","Hidden","smDown","Grid","justify","item","alt","src","type","require","component","align","gutterBottom","paragraph","Link","underline","href","is_fire_fox","InstallTrigger","faculty_prefix_dict","courseNumberToName","number","all_courses","coursesData","allCoursesData","activeCoursesData","prefix","substring","target_faculty","obj","faculty","name","courses","course_item","courseNumber","courseName","reverseFireFox","split","reverse","join","appendTree","data","visited","styles","finished","courseItem","kdams","kdam","undefined","String","has","add","push","childrenArray","length","optionGroup","first_level","_collapsed","nodeSvgShape","shape","strokeWidth","shapeProps","cx","cy","r","children","all_courses_data","active_courses_data","default","headlines","paddingTop","formControl","minWidth","button","empty_course_obj","starter_course_obj","KdamForm","useState","setFaculty","setAllCourses","course_list","setCourseList","courseObj","setCourseObj","faculty_required","setFacultyRequired","course_required","setCourseRequired","history","useHistory","i","courses_data","faculty_from_list","res","map","course","Paper","elevation","alignItems","direction","FormControl","error","required","InputLabel","Select","value","e","target","MenuItem","Autocomplete","fullWidth","autoHighlight","options","getOptionLabel","option","val_obj","getOptionSelected","renderInput","params","TextField","label","margin","Button","onClick","ok","alert","process","tree","marginTop","tree_container","minHeight","but","maxHeight","main_container","control_panel","zoom","low_button","CourseTree","is_cell","a","check","navigator","userAgent","vendor","window","opera","test","substr","mobileAndTabletCheck","is_fullscreen_enabled","screenfull","isEnabled","x","y","dimensions","setDimensions","tree_data","setTreeData","current_course","setCurrentCourse","current_course_url","setCurrentCourseUrl","setZoom","tree_container_ref","useRef","main_container_ref","toggleFullScreen","current","toggle","console","log","centerTree","getBoundingClientRect","width","parsed","queryString","parse","location","search","num","allcourses","old","Set","calculateTree","addEventListener","light_styles","links","stroke","strokeOpacity","leafNode","attributes","fill","nodes","node","circle","ref","xs","md","wrap","Tooltip","arrow","title","IconButton","fontSize","open","justifySelf","onTouchStart","scrollX","scrollY","onscroll","scrollTo","onTouchEnd","initialDepth","translate","orientation","transitionDuration","separation","siblings","nonSiblings","textLayout","textAnchor","transform","collapsible","nodeData","evt","course_number","corrected_name","courseNameToNumber","url","footer","divider","Footer","Divider","App","localStorage","getItem","setDarkMode","dark_theme","createMuiTheme","primary","main","secondary","light","dark","light_theme","ThemeProvider","CssBaseline","setItem","toString","atEnter","opacity","atLeave","atActive","path","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bd67e70f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/seanTheMan2.a1212ef9.png\";","module.exports = __webpack_public_path__ + \"static/media/seanTheMan.6cc3e2d5.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport {Toolbar} from \"@material-ui/core\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nexport function MyAppBar(props) {\r\n    const classes = useStyles();\r\n    return(\r\n        <AppBar color={'primary'} position={'sticky'}>\r\n            <Toolbar>\r\n                <AccountTreeIcon className={classes.icon}/>\r\n                <Switch\r\n                    checked={props.dark_mode}\r\n                    onChange={props.toggleTheme}\r\n                    color=\"secondary\"\r\n                />\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                    Toggle dark / light mode\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport {Container, Link} from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(4, 0, 3),\r\n    },\r\n    large: {\r\n\r\n    },\r\n    avatar_container: {\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n\r\n}));\r\n\r\n\r\n\r\nexport function Header(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    useEffect( () => {\r\n        document.body.style.overflow = null;\r\n    }, []);\r\n\r\n    return(\r\n        <div className={classes.container}>\r\n            <Container maxWidth={'md'}>\r\n                <Hidden smDown>\r\n                    <Grid container justify=\"center\" className={classes.avatar_container}>\r\n                        <Grid item>\r\n                            <img alt={'tree_graph_pic'} src={theme.palette.type === 'dark' ? (require(`../data/pics/seanTheMan2.png`)) : (require(`../data/pics/seanTheMan.png`))} className={classes.large}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Hidden>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Kdam Tree Graph\r\n                </Typography>\r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                    A little experiment using {<Link underline={'always'} color={'textSecondary'} href={'https://reactjs.org/'}>React.js</Link>} with\r\n                    the {<Link underline={'always'} color={'textSecondary'} href={'https://material-ui.com/'}>Mateial-UI</Link>} framework.<br/> This\r\n                    application answers the question \"After i will finish my course, what courses can i do?\"\r\n                </Typography>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import activeCoursesData from \"../data/coursesData/activeCourses.json\";\r\nimport allCoursesData from \"../data/coursesData/allCourses.json\"\r\n\r\nconst is_fire_fox = typeof InstallTrigger !== 'undefined';\r\n\r\nconst faculty_prefix_dict = {\r\n    '01': 'civil',\r\n    '03':'mechanical',\r\n    '04': 'electric',\r\n    '05': 'chemical_eng',\r\n    '06': 'bio_and_food_eng',\r\n    '08': 'aviro',\r\n    '09': 'industrial',\r\n    '10': 'math',\r\n    '19': 'math',\r\n    '11': 'physics',\r\n    '12': 'chemistry',\r\n    '13': 'biology',\r\n    '20': 'architecture',\r\n    '21': 'education',\r\n    '23': 'cs',\r\n    '27': 'md',\r\n    '31': 'materials',\r\n    '32': 'humanities',\r\n    '33': 'bio_med',\r\n}\r\n\r\nexport const courseNumberToName = (number, all_courses = 'false') => {\r\n    const coursesData = all_courses === 'true' ? allCoursesData : activeCoursesData;\r\n    let prefix = number.substring(0, 2);\r\n    let target_faculty = faculty_prefix_dict[prefix];\r\n    for (const obj of coursesData){\r\n        if(obj.faculty.name !== target_faculty){\r\n            continue;\r\n        }\r\n        if(obj.faculty.courses){\r\n            for(const course_item of obj.faculty.courses){\r\n                if(course_item.courseNumber === number){\r\n                    return course_item.courseName;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function reverseFireFox(name){\r\n    if(is_fire_fox){\r\n        return name;\r\n    }\r\n    return name.split(\"\").reverse().join(\"\");\r\n}\r\n\r\nexport const courseNameToNumber = (name, all_courses = 'false') => {\r\n    const coursesData = all_courses === 'true' ? allCoursesData : activeCoursesData;\r\n    let corrected_name = reverseFireFox(name);\r\n    for (const obj of coursesData){\r\n        if(!obj.faculty.courses){\r\n            continue;\r\n        }\r\n        for(const course_item of obj.faculty.courses){\r\n            if(course_item.courseName === corrected_name){\r\n                return course_item.courseNumber;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction appendTree(data, visited, styles, all_courses = 'false'){\r\n    const coursesData = all_courses === 'true' ? allCoursesData : activeCoursesData;\r\n    let finished = [];\r\n    for (const obj of coursesData){\r\n        if(!obj.faculty.courses){\r\n            continue;\r\n        }\r\n        for(const courseItem of obj.faculty.courses){\r\n            if(!courseItem.kdams){\r\n                continue;\r\n            }\r\n            for(const kdam of courseItem.kdams){\r\n                if(String(courseNumberToName(kdam, all_courses)) === undefined || kdam !== data.number || visited.has(courseItem.courseNumber)){\r\n                    continue;\r\n                }\r\n                visited.add(courseItem.courseNumber)\r\n                finished.push({'name': courseNumberToName(courseItem.courseNumber, all_courses), 'number': courseItem.courseNumber});\r\n            }\r\n        }\r\n    }\r\n    let childrenArray = [];\r\n    if(finished.length > 0){\r\n        for(const item of finished){\r\n            childrenArray.push(appendTree({faculty: data.faculty, number: item.number, optionGroup: item.optionGroup}, visited, {...styles, first_level:false}, all_courses));\r\n        }\r\n    }\r\n    return {\r\n        name: reverseFireFox(courseNumberToName(data.number, all_courses)),\r\n        _collapsed: !styles.first_level,\r\n        nodeSvgShape: {\r\n            shape: 'circle',\r\n            strokeWidth: 0,\r\n            shapeProps: {\r\n                cx: 0,\r\n                cy: 0,\r\n                r: 11,\r\n            },\r\n        },\r\n        children: childrenArray\r\n    };\r\n}\r\n\r\nexport const calculateTree = (number, styles, all_courses = 'false') => {\r\n    let data = {\r\n        number: number\r\n    }\r\n    let visited = new Set();\r\n    return appendTree(data, visited, {...styles, first_level:true}, all_courses)\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Container} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {courseNumberToName} from \"../utils/TreeBuilder\";\r\nconst all_courses_data = require('../data/coursesData/allCourses.json');\r\nconst active_courses_data = require('../data/coursesData/activeCourses.json');\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(4, 0, 3),\r\n    },\r\n    headlines: {\r\n        paddingTop: theme.spacing(1)\r\n    },\r\n    formControl: {\r\n        marginBottom: theme.spacing(1),\r\n        minWidth: 250,\r\n    },\r\n    button:{\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst starter_course_string = 'Please choose faculty';\r\nconst empty_course_obj = {courseName: '', courseNumber: '000000'}\r\nconst starter_course_obj = {courseName: starter_course_string, courseNumber: '000000'}\r\n\r\nexport function KdamForm(props) {\r\n    const classes = useStyles();\r\n    const [faculty, setFaculty] = useState('');\r\n    const [all_courses, setAllCourses] = useState(false);\r\n    const [course_list, setCourseList] = useState([starter_course_obj, empty_course_obj])\r\n    const [courseObj, setCourseObj] = useState(starter_course_obj);\r\n    const [faculty_required, setFacultyRequired] = useState(false);\r\n    const [course_required, setCourseRequired] = useState(false);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        const courses_data = all_courses ? all_courses_data : active_courses_data;\r\n        let faculty_from_list = {};\r\n        if(faculty !== ''){\r\n            let i;\r\n            for (i = 0; i < courses_data.length; i++){\r\n                faculty_from_list = courses_data[i].faculty;\r\n                if(faculty_from_list.name === faculty && faculty_from_list.courses){\r\n                    let res = faculty_from_list.courses.map((course) => {\r\n                        return {\r\n                            courseName: `${course.courseName} ${course.courseNumber}`,\r\n                            courseNumber: course.courseNumber\r\n                        }\r\n                    })\r\n                    // res.push(starter_course_obj);\r\n                    res.push(empty_course_obj);\r\n                    setCourseList(res);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }, [faculty, all_courses]);\r\n\r\n    const searchClicked = () => {\r\n        let ok = true;\r\n        if(faculty === ''){\r\n            setFacultyRequired(true);\r\n            ok = false;\r\n        }\r\n        if(courseObj.courseNumber === '000000'){\r\n            setCourseRequired(true)\r\n            alert('Please choose course and then click search!');\r\n            ok = false;\r\n        }\r\n        if(!ok){\r\n            return;\r\n        }         \r\n        history.push(`${process.env.PUBLIC_URL}/tree?num=${courseObj.courseNumber}&allcourses=${all_courses}`)\r\n    }\r\n\r\n    const changedFacultyOption = (e) => {\r\n        setFaculty(e.target.value);\r\n        setCourseObj(empty_course_obj);\r\n    }\r\n\r\n    const changedTypeOfCourses = (e) => {\r\n        const exists = courseNumberToName(courseObj.courseNumber, !all_courses);\r\n        if(!exists){\r\n            setCourseObj(empty_course_obj);\r\n        }\r\n        setAllCourses(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <div className={classes.container}>\r\n            <Container maxWidth={'sm'}>\r\n                <Paper elevation={3} >\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" className={classes.headlines} gutterBottom>\r\n                        Let's get started\r\n                    </Typography>\r\n                    <Grid container alignItems={'center'} direction={'column'}>\r\n                        <Grid item>\r\n                            <FormControl error={faculty_required} required={faculty_required} className={classes.formControl}>\r\n                                <InputLabel>Faculty</InputLabel>\r\n                                <Select\r\n                                    value={faculty}\r\n                                    onChange={changedFacultyOption}\r\n                                >\r\n                                    <MenuItem value={'cs'}>מדעי המחשב</MenuItem>\r\n                                    <MenuItem value={'industrial'}>תעשייה וניהול</MenuItem>\r\n                                    <MenuItem value={'electric'}>הנדסת חשמל</MenuItem>\r\n                                    <MenuItem value={'math'}>מתמטיקה</MenuItem>\r\n                                    <MenuItem value={'physics'}>פיזיקה</MenuItem>\r\n                                    <MenuItem value={'civil'}>הנדסה אזרחית</MenuItem>\r\n                                    <MenuItem value={'chemical_eng'}>הנדסת חומרים</MenuItem>\r\n                                    <MenuItem value={'aviro'}>אווירונאוטיקה וחלל</MenuItem>\r\n                                    <MenuItem value={'mechanical'}>הנדסת מכונות</MenuItem>\r\n                                    <MenuItem value={'chemistry'}>כימיה</MenuItem>\r\n                                    <MenuItem value={'materials'}>הנדסת חומרים</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel>Type of courses</InputLabel>\r\n                                <Select\r\n                                    value={all_courses}\r\n                                    onChange={changedTypeOfCourses}\r\n                                >\r\n                                    <MenuItem value={false}>Only active courses</MenuItem>\r\n                                    <MenuItem value={true}>All courses</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl error={course_required} required={course_required} className={classes.formControl}>\r\n                                <Autocomplete\r\n                                    value={courseObj}\r\n                                    fullWidth={true}\r\n                                    autoHighlight={true}\r\n                                    options={course_list}\r\n                                    getOptionLabel={(option) => option.courseName}\r\n                                    onChange={(e, val_obj) => {\r\n                                        if(val_obj){\r\n                                            setCourseObj(val_obj);\r\n                                        }else{\r\n                                            if(faculty){\r\n                                                setCourseObj(empty_course_obj)\r\n                                            }else{\r\n                                                setCourseObj(starter_course_obj)\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    getOptionSelected={((option, value) => option.courseName === value.courseName)}\r\n                                    renderInput={(params) => <TextField {...params} label={'Course'} margin=\"normal\"/>}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item className={classes.button}>\r\n                            <Button onClick={searchClicked} variant=\"contained\" color=\"primary\">\r\n                                Search\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Tree from 'react-d3-tree';\r\nimport {Button, Container, Typography} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {calculateTree, courseNameToNumber, reverseFireFox, courseNumberToName} from \"../utils/TreeBuilder\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport screenfull from \"screenfull\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\n\r\n// wow\r\nconst mobileAndTabletCheck = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n    return check;\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(4, 0, 3),\r\n    },\r\n    tree:{\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    tree_container: {\r\n        minHeight: 500,\r\n    },\r\n    but: {\r\n        maxHeight: 40\r\n    },\r\n    main_container: {\r\n\r\n    },\r\n    control_panel: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    zoom: {\r\n        paddingTop: 7,\r\n    },\r\n    low_button: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport function CourseTree(props) {\r\n    const is_cell = mobileAndTabletCheck()\r\n    const is_fullscreen_enabled = screenfull.isEnabled;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const [dimensions, setDimensions] = useState({\r\n        x: 30,\r\n        y: 30\r\n    })\r\n    const [tree_data, setTreeData] = useState({})\r\n    const [current_course, setCurrentCourse] = useState('');\r\n    const [all_courses, setAllCourses] = useState('false')\r\n    const [current_course_url, setCurrentCourseUrl] = useState('');\r\n    const [zoom, setZoom] = useState(0.8)\r\n    const tree_container_ref = useRef(null);\r\n    const main_container_ref = useRef(null);\r\n\r\n    const toggleFullScreen = async () => {\r\n        try{\r\n            if(main_container_ref && main_container_ref.current){\r\n                await screenfull.toggle(main_container_ref.current);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    const nodeClicked = (nodeData, evt) => {\r\n        const course_number = courseNameToNumber(nodeData.name, all_courses);\r\n        const url = `https://ug3.technion.ac.il/rishum/course/${course_number}`;\r\n        setCurrentCourse(reverseFireFox(nodeData.name));\r\n        setCurrentCourseUrl(url);\r\n    }\r\n    const newSearchClicked = () => {\r\n        history.push(`${process.env.PUBLIC_URL}/`);\r\n    }\r\n    const gotoCourseClicked = () => {\r\n        window.open(current_course_url, \"_blank\")\r\n    }\r\n    const centerTree = async () => {\r\n        if(tree_container_ref.current){\r\n            const dimensions = tree_container_ref.current.getBoundingClientRect();\r\n            let width  = dimensions.width / 2;\r\n            // Trick so it will work even if the component width was not changed!\r\n            await setDimensions({\r\n                x: 30,\r\n                y: 30\r\n            })\r\n            setDimensions({\r\n                x: width,\r\n                y: 30\r\n            })\r\n        }\r\n    }\r\n    const zoomOut = () => {\r\n        let old_zoom = zoom\r\n        if(old_zoom < 0.3){\r\n            setZoom(0)\r\n        }else{\r\n            setZoom(old_zoom - 0.3)\r\n        }\r\n    }\r\n    const zoomIn = () => {\r\n        setZoom(zoom + 0.3)\r\n    }\r\n    function disableScroll() {\r\n        let x=window.scrollX;\r\n        let y=window.scrollY;\r\n        window.onscroll=function(){window.scrollTo(x, y);};\r\n    }\r\n    function enableScroll() {\r\n        window.onscroll=function(){};\r\n    }\r\n\r\n    useEffect( () => {\r\n        centerTree();\r\n        const parsed = queryString.parse(window.location.search)\r\n        if(!parsed || !parsed.num){\r\n            alert('problem with getting course number. please choose course again');\r\n            history.push(`${process.env.PUBLIC_URL}/`);\r\n            return;\r\n        }\r\n        if(!courseNumberToName(parsed.num, parsed.allcourses)){\r\n            alert('problem with finding course based on course number. please choose course again');\r\n            history.push(`${process.env.PUBLIC_URL}/`);\r\n            return;\r\n        }\r\n        if(!parsed.allcourses){\r\n            alert('problem getting type of courses preferences. looking only at active courses by default');\r\n        }\r\n        setAllCourses((old) => parsed.allcourses);\r\n        let res = calculateTree(parsed.num, {}, parsed.allcourses);\r\n        setTreeData(res);\r\n        window.addEventListener('resize', centerTree);\r\n    }, [history]);\r\n\r\n    const dark_styles = {\r\n        links: {\r\n            stroke: '#ff8080',\r\n            strokeWidth: 2,\r\n            strokeOpacity: 1 ,\r\n        },\r\n        leafNode: {\r\n            attributes: {\r\n                fill: 'black'\r\n            }\r\n        },\r\n        nodes: {\r\n            node:{\r\n                circle: {\r\n                    fill: '#ff8080',\r\n                    strokeWidth: 1.4,\r\n                    stroke: '#424242'\r\n                },\r\n                name: {\r\n                    fill: '#e0e0eb',\r\n                    strokeWidth: 0,\r\n                }\r\n            },\r\n            leafNode: {\r\n                name: {\r\n                    fill: '#e0e0eb',\r\n                    strokeWidth: 0,\r\n                },\r\n                circle: {\r\n                    fill: '#424242',\r\n                    strokeWidth: 1.4,\r\n                    stroke: '#ff8080'\r\n                },\r\n            }\r\n        },\r\n    }\r\n    const light_main = '#9489C5'\r\n    const light_styles = {\r\n        links: {\r\n            stroke: light_main,\r\n            strokeWidth: 2,\r\n            strokeOpacity: 1 ,\r\n        },\r\n        leafNode: {\r\n            attributes: {\r\n                fill: 'black'\r\n            }\r\n        },\r\n        nodes: {\r\n            node:{\r\n                circle: {\r\n                    fill: light_main,\r\n                    strokeWidth: 1.2,\r\n                    stroke: theme.palette.background.paper\r\n                },\r\n                name: {\r\n                    strokeWidth: 0.5,\r\n                }\r\n            },\r\n            leafNode: {\r\n                name: {\r\n                    strokeWidth: 0.5,\r\n                },\r\n                circle: {\r\n                    fill: theme.palette.background.paper,\r\n                    strokeWidth: 1.4,\r\n                    stroke: light_main\r\n                },\r\n            }\r\n        },\r\n    }\r\n\r\n    return(\r\n        <div ref={main_container_ref}>\r\n            <Container maxWidth={'sm'} className={classes.tree}>\r\n                <Paper elevation={3} className={classes.control_panel}>\r\n                    <Grid spacing={0} container>\r\n                        <Grid item xs={12} >\r\n                            <Typography  variant=\"h5\" align=\"center\" color=\"textPrimary\" >\r\n                                Control Pannel\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item container justify={'center'} xs={12} md={12} spacing={0} wrap={\"nowrap\"}>\r\n                            <Tooltip arrow title=\"zoom in\">\r\n                                <IconButton onClick={zoomIn}> <ZoomInIcon fontSize=\"large\"/></IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip arrow title=\"re-center tree\">\r\n                                <IconButton onClick={centerTree}> <CenterFocusStrongIcon fontSize=\"large\"/> </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip arrow title=\"zoom out\">\r\n                                <IconButton onClick={zoomOut}> <ZoomOutIcon fontSize=\"large\"/> </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        {is_cell && is_fullscreen_enabled && (\r\n                            <Grid style={{marginBottom : theme.spacing(1)}} item container justify={'center'} xs={12}>\r\n                                <Button onClick={toggleFullScreen} variant=\"outlined\" color=\"primary\">\r\n                                    fullScreen\r\n                                </Button>\r\n                            </Grid>\r\n                        )}\r\n                        <Grid item container justify={'center'} xs={12}>\r\n                            <Button onClick={gotoCourseClicked} variant=\"text\" color=\"primary\">\r\n                                {current_course === '' ? ('Clicking on node tree will give you a link') : (`עבור אל ${current_course}`)}\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid className={classes.low_button} item container justify={'center'} xs={12}>\r\n                            <Button style={{justifySelf:'center'}} onClick={newSearchClicked} variant=\"text\" color=\"primary\">\r\n                                new search\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n            <Container maxWidth={'xl'}>\r\n                <Paper elevation={3} onTouchStart={disableScroll} onTouchEnd={enableScroll} ref = {tree_container_ref}>\r\n                    <Grid container className={classes.main_container}>\r\n                        <Grid item xs={12} className={classes.tree_container}>\r\n                            <Tree\r\n                                initialDepth={0}\r\n                                styles={theme.palette.type === 'dark'? dark_styles : light_styles}\r\n                                translate={dimensions}\r\n                                data={tree_data}\r\n                                orientation={'vertical'}\r\n                                transitionDuration={0}\r\n                                separation={{siblings: 1.9, nonSiblings: 1.5}}\r\n                                textLayout={{textAnchor: \"start\", x: 15, y: 0, transform: undefined }}\r\n                                collapsible={true}\r\n                                zoom={zoom}\r\n                                onClick={nodeClicked}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Container, Divider} from \"@material-ui/core\";\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    divider: {\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nfunction Footer() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container className={classes.footer}>\r\n            <Divider className={classes.divider} />\r\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                <Link href=\"https://github.com/LightSean\" color={'textSecondary'}>\r\n                    Created by Sean Meir\r\n                </Link>\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                Up to date with winter 2020-2021\r\n            </Typography>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {MyAppBar} from \"./components/MyAppBar\";\nimport {ThemeProvider, createMuiTheme} from \"@material-ui/core/styles\"\nimport {Header} from \"./components/Header\";\nimport {KdamForm} from \"./components/KdamForm\";\nimport {CourseTree} from \"./components/CourseTree\";\nimport {\n    BrowserRouter as Router,\n    Route\n} from \"react-router-dom\";\nimport { AnimatedSwitch } from 'react-router-transition';\nimport Footer from \"./components/Footer\";\nfunction App() {\n    const [dark_mode, setDarkMode] = useState(localStorage.getItem('dark_mode') ? localStorage.getItem('dark_mode')  === 'true' : false);\n    const dark_theme = createMuiTheme({\n        palette: {\n            type: \"dark\",\n            primary: {\n                main: '#bf4040'\n            },\n            secondary: {\n                main: '#ff8080',\n                light: '#ff8080',\n                dark: '#ff8080'\n            }\n        },\n    });\n    const light_theme = createMuiTheme({\n        palette: {\n            secondary: {\n                main: '#ff8080',\n                light: '#ff8080',\n                dark: '#ff8080'\n            },\n            primary: {\n                main: '#554B8E'\n\n            }\n        }\n    });\n    const toggleTheme = () => {\n        localStorage.setItem('dark_mode', (!dark_mode).toString());\n        setDarkMode(!dark_mode)\n    }\n\n    return (\n        <Router>\n            <ThemeProvider theme={dark_mode? dark_theme : light_theme}>\n                    <CssBaseline />\n                    <MyAppBar dark_mode={dark_mode} toggleTheme={toggleTheme}/>\n                    <AnimatedSwitch\n                        atEnter={{ opacity: 0 }}\n                        atLeave={{ opacity: 0 }}\n                        atActive={{ opacity: 1 }}\n                    >\n                        <Route path={`${process.env.PUBLIC_URL}/tree`}>\n                            <CourseTree/>\n                        </Route>\n                        <Route path={`${process.env.PUBLIC_URL}/`}>\n                            <Header/>\n                            <KdamForm/>\n                        </Route>\n                    </AnimatedSwitch>\n                    <Footer/>\n            </ThemeProvider>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}